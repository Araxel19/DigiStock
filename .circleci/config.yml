# CircleCI Configuration for DigiStock
version: 2.1

orbs:
  node: circleci/node@5.0.2
  sonarcloud: sonarsource/sonarcloud@3.0.1

jobs:
  # üß± Instalar dependencias y compilar todos los workspaces
  install_and_build_all:
    docker:
      - image: cimg/node:18.16
    working_directory: ~/project
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: "Compilar todos los workspaces"
          command: npm run build
      - persist_to_workspace:
          root: ~/project
          paths:
            - business-logic/dist
            - backend/dist

  # üß™ Ejecutar pruebas (si existen)
  run_tests:
    docker:
      - image: cimg/node:18.16
    working_directory: ~/project
    steps:
      - checkout
      - attach_workspace:
          at: ~/project
      - run:
          name: "Ejecutar pruebas si existen"
          command: |
            if grep -q "\"test\":" package.json; then
              npm test
            else
              echo "No hay pruebas definidas. Saltando paso..."
            fi

  # üê≥ Construir im√°genes Docker y subirlas
  docker_build:
    docker:
      - image: cimg/base:stable
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: ./
      - run:
          name: "Cachear dependencias del backend"
          command: |
            if [ -d "backend/node_modules" ]; then
              echo "Dependencias del backend ya cacheadas."
            else
              cd backend && npm ci
            fi
      - run:
          name: "Cachear dependencias del frontend"
          command: |
            if [ -d "frontend/node_modules" ]; then
              echo "Dependencias del frontend ya cacheadas."
            else
              cd frontend && npm ci
            fi
      - run:
          name: "Construir imagen Docker del backend"
          command: |
            docker build \
              --cache-from araxel119/digistock-backend:latest \
              -t araxel119/digistock-backend:latest \
              -f backend/Dockerfile .
      - run:
          name: "Construir imagen Docker del frontend"
          command: |
            docker build \
              --cache-from araxel119/digistock-frontend:latest \
              -t araxel119/digistock-frontend:latest \
              -f frontend/Dockerfile frontend
      - run:
          name: "Autenticarse y subir im√°genes"
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push araxel119/digistock-backend:latest
            docker push araxel119/digistock-frontend:latest

  # üîç An√°lisis SonarCloud con Orb oficial
  sonarcloud_analysis:
    docker:
      - image: cimg/node:18.16
    working_directory: ~/project
    steps:
      - checkout
      - sonarcloud/scan

workflows:
  version: 2
  build_pipeline:
    jobs:
      - install_and_build_all
      - run_tests:
          requires:
            - install_and_build_all
      - docker_build:
          requires:
            - install_and_build_all
      - sonarcloud_analysis:
          requires:
            - install_and_build_all
